import React, { useEffect, useState } from 'react';
import ReactFlow, { Background, Controls } from 'reactflow';
import type { Node, Edge } from 'reactflow';
import 'reactflow/dist/style.css';

interface PresenceGraphProps {
  presence: PresenceData[];
}
/* Example of PresenceData
  {
    "_id": [
      2,
      135,
      2,
      130,
      67,
      2,
      94,
      152,
      49,
      190,
      114,
      123,
      131,
      100,
      75,
      119,
      210,
      238,
      14,
      189,
      116,
      45,
      171,
      121,
      74,
      88,
      192,
      46,
      35,
      16,
      87,
      71,
      39,
      151,
      101,
      255,
      1,
      95
    ],
    "c": [
      164,
      26,
      29,
      119,
      149,
      167,
      164,
      97,
      115,
      27,
      236,
      35,
      233,
      7,
      204,
      87,
      194,
      34,
      97,
      112,
      88,
      38,
      2,
      135,
      2,
      130,
      67,
      2,
      96,
      179,
      23,
      214,
      187,
      43,
      158,
      250,
      119,
      249,
      38,
      230,
      200,
      4,
      62,
      53,
      89,
      60,
      87,
      215,
      156,
      159,
      81,
      17,
      68,
      15,
      112,
      131,
      229,
      195,
      104,
      123,
      97,
      116,
      163,
      97,
      117,
      27,
      0,
      0,
      1,
      150,
      228,
      194,
      127,
      92,
      97,
      109,
      25,
      8,
      0,
      97,
      101,
      245,
      97,
      97,
      162,
      97,
      117,
      27,
      0,
      0,
      1,
      150,
      229,
      143,
      103,
      39,
      97,
      109,
      25,
      8,
      0,
      26,
      56,
      187,
      130,
      83,
      164,
      97,
      115,
      27,
      94,
      165,
      177,
      62,
      228,
      199,
      150,
      40,
      97,
      112,
      88,
      38,
      2,
      135,
      2,
      130,
      67,
      3,
      114,
      163,
      97,
      250,
      40,
      74,
      242,
      109,
      215,
      117,
      237,
      229,
      57,
      221,
      185,
      174,
      114,
      203,
      87,
      158,
      252,
      146,
      209,
      80,
      9,
      65,
      170,
      108,
      59,
      105,
      5,
      42,
      97,
      116,
      163,
      97,
      117,
      27,
      0,
      0,
      1,
      150,
      228,
      194,
      134,
      206,
      97,
      109,
      25,
      8,
      0,
      97,
      101,
      245,
      97,
      97,
      162,
      97,
      117,
      27,
      0,
      0,
      1,
      150,
      229,
      145,
      167,
      160,
      97,
      109,
      25,
      8,
      0,
      26,
      175,
      212,
      239,
      127,
      164,
      97,
      115,
      27,
      127,
      113,
      36,
      201,
      82,
      56,
      12,
      137,
      97,
      112,
      88,
      38,
      2,
      135,
      2,
      130,
      67,
      3,
      239,
      145,
      71,
      59,
      150,
      187,
      199,
      45,
      189,
      190,
      68,
      65,
      192,
      152,
      111,
      39,
      21,
      135,
      108,
      112,
      50,
      153,
      72,
      201,
      134,
      80,
      15,
      182,
      210,
      130,
      66,
      51,
      97,
      116,
      163,
      97,
      117,
      27,
      0,
      0,
      1,
      150,
      228,
      194,
      131,
      54,
      97,
      109,
      25,
      8,
      0,
      97,
      101,
      245,
      97,
      97,
      162,
      97,
      117,
      27,
      0,
      0,
      1,
      150,
      229,
      145,
      159,
      28,
      97,
      109,
      25,
      8,
      0,
      26,
      255,
      201,
      219,
      39,
      163,
      97,
      115,
      27,
      115,
      173,
      116,
      253,
      209,
      227,
      192,
      228,
      97,
      112,
      88,
      38,
      2,
      135,
      2,
      130,
      67,
      2,
      146,
      29,
      10,
      201,
      128,
      186,
      179,
      68,
      241,
      169,
      50,
      23,
      193,
      39,
      79,
      184,
      109,
      23,
      180,
      202,
      136,
      75,
      234,
      180,
      95,
      109,
      164,
      87,
      152,
      223,
      237,
      115,
      97,
      104,
      163,
      97,
      117,
      27,
      0,
      0,
      1,
      150,
      229,
      143,
      142,
      189,
      97,
      109,
      25,
      8,
      0,
      97,
      101,
      245
    ],
    "d": "Atlanta-pos-2",
    "n": 21571545,
    "o": 77,
    "s": 1960925309308069400,
    "t": 1747612271708,
    "v": 3
  }
  */

interface PresenceData {
  _id: number[];
  c: any[];
  d: string;
  n: number;
  o: number;
  s: number;
  t: number;
  v: number;
}

export default function PresenceGraph({ presence }: PresenceGraphProps) {
  const [nodes, setNodes] = useState<Node[]>([]);
  const [edges, setEdges] = useState<Edge[]>([]);

  useEffect(() => { 
      // Create nodes and edges from presence data
      const newNodes: Node[] = [];
      const newEdges: Edge[] = [];

      // Add connected peers as nodes and create edges
      presence.forEach((node: PresenceData, index: number) => {
        const angle = (index * 2 * Math.PI) / presence.length;
        const radius = 200;
        
     
        Object.values(node.c).forEach((connectedPeer: any) => {
          
          newEdges.push({
            id: `${node.d}-${connectedPeer.d}`,
            source: node.d,
            target: connectedPeer.d,
            animated: true,
              style: { stroke: '#777' }
            });
          });
         
          newNodes.push({
            id: node.d,
            data: { label: `${node.d}` },
            position: {
              x: 250 + radius * Math.cos(angle),
              y: 250 + radius * Math.sin(angle)
            },
            style: { 
              background: (Date.now() - node.t > 10 * 60 * 1000) ? 'red' : 'white', 
              color: 'black', 
              border: '1px solid #777', 
              borderRadius: 5, 
              padding: 10 
            }
          });
  
          
      });

      setNodes(newNodes);
      setEdges(newEdges);
  }, [presence]);

  return (
    <div style={{ width: '100%', height: '500px' }}>
      <ReactFlow
        nodes={nodes}
        edges={edges}
        fitView
      >
        <Background />
        <Controls />
      </ReactFlow>
    </div>
  );
} 